import { FONTSIZES, LINE_HEIGHTS } from '@/constants/index';
const getters = {
  globalData: state => state.global.data,
  pageStatus: state => state.global.pageStatus,
  autoAddBook: state => state.global.autoAddBook,
  isHmArk: state => state.global.isHmArk,

  statusBarHeight: state => state.statusBar.height,
  navigationHeight: state => state.statusBar.navigationHeight,
  topbarHeight: state => state.statusBar.height +  state.statusBar.crumbHeight,

  theme: state => state.theme.themeData,
  themeIndex: state => state.theme.themeIndex,
  themeList: state => state.theme.themeList,
  feedDisplayMode: state => state.theme.feedDisplayMode,
  feedModeText: state => state.theme.feedModeText,

  fontSizeLevel: state => state.fontSize.fontSizeLevel,
  fontSizeRatio: state => state.fontSize.ratio,
  fontSizeInitial: state => FONTSIZES[state.fontSize.fontSizeLevel - 1],
  fontSize: state => FONTSIZES[state.fontSize.fontSizeLevel - 1] / state.fontSize.ratio,
  titleFontSize: state => Math.round(FONTSIZES[state.fontSize.fontSizeLevel - 1] * 1.3 / state.fontSize.ratio),
  fontLineHeight: state => LINE_HEIGHTS[state.fontSize.lineHeightLevel - 1],

  readUIConfig: state => state.adConfig.readUIConfig,
  freeAdConfig: state => state.adConfig.freeAdConfig,
  rewardInfo: state => state.adConfig.rewardInfo,
  rewardFree: state => state.adConfig.rewardFree,
  rewardTimeGap: state => state.adConfig.rewardTimeGap,
  rewardAdNewStyle: state => state.adConfig.rewardAdNewStyle,
  rewardAdCpConfig: state => state.adConfig.rewardAdCpConfig,
  novelInsideAdConfig: state => state.adConfig.novelInsideAdConfig,
  adStartPage: state => state.adConfig.adStartPage,
  novelBottomAdConfig: state => state.adConfig.novelBottomAdConfig,
  controlBottomAd: state => state.adConfig.controlBottomAd,
  adBottomReloadTime: state => state.adConfig.adBottomReloadTime,
  bannerAdConfig: state => state.adConfig.bannerAdConfig,
  isShowBanner: state => state.adConfig.isShowBanner,
  chapterBottomAdConfig: state => state.adConfig.chapterBottomAdConfig,
  controlLockAd: state => state.adConfig.controlLockAd,
  adKitConfig: state => state.adConfig.adKitConfig,
  adYwConfig: state => state.adConfig.adYwConfig,
  adPrivacy: state => state.adConfig.adPrivacy,
  autoPageTurnFlag: state => state.adConfig.autoPageTurnFlag,
  renderAdOpen: state => state.adConfig.renderAdOpen,
  renderAdIDs: state => state.adConfig.renderAdIDs,
  cacheAdReqNum: state => state.adConfig.cacheAdReqNum,
  cacheAds: state => state.adConfig.cacheAds,
  cacheAdCcid: state => state.adConfig.cacheAdCcid,
  adSplitConfig: state => state.adConfig.adSplitConfig,
  adFirstConfig: state => state.adConfig.adFirstConfig,
  adBottomSplitConfig: state => state.adConfig.adBottomSplitConfig,
  adBottomFirstConfig: state => state.adConfig.adBottomFirstConfig,
  downAdConfig: state => state.adConfig.downAdConfig,
  downAdLock: state => state.adConfig.downAdLock,
  downAds: state => state.adConfig.downAds,
  downAdDatas: state => state.adConfig.downAdDatas,
  downAdDataApps: state => state.adConfig.downAdDataApps,
  downAdBar: state => state.adConfig.downAdBar,
  downAdReqNum: state => state.adConfig.downAdReqNum,
  downAdReq: state => state.adConfig.downAdReq,
  insertAdConfig: state => state.adConfig.insertAdConfig,
  insertAdLock: state => state.adConfig.insertAdLock,
  insertAdSlotId: state => state.adConfig.insertAdSlotId,
  loginPopwinReadpage: state => state.adConfig.loginPopwinReadpage,

  booksConfig: state => state.adConfig.booksConfig,
  bookUserConfig: state => state.adConfig.bookUserConfig,
  deepBooksConfig: state => state.adConfig.deepBooksConfig,
  hasDeepBooks: state => state.adConfig.hasDeepBooks,

  bookFeiyeImg1: state => state.adConfig.bookFeiyeImg1,
  bookFeiyeImg2: state => state.adConfig.bookFeiyeImg2,
  menuBarConfig: state => state.adConfig.menuBarConfig,

  catalogList: state => state.catalogList.list,
  catalogLoading: state => state.catalogList.loading,
};

export default getters;
